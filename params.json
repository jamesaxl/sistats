{"body":"sistats\r\n=======\r\n\r\n![this is not xkcd](https://raw.github.com/marianoguerra/sistats/master/sistats.jpg)\r\n\r\nwhy?\r\n----\r\n\r\nI need to *collect system stats and put it over there*(TM)\r\n\r\nI wanted to start extracting the stats collection from [glances](https://github.com/nicolargo/glances/) but the code\r\nwas full of try/except and kind of unpythonic *so I decided to start from scratch*(TM)\r\n\r\nwhat?\r\n-----\r\n\r\na library (sistats) that gives you system stats and allows to calculate the\r\nvariation between two reads and some modules that allow to periodically check\r\nfor stats and put it over there (mqtt and REST for now)\r\n\r\nan example of the sistats module:\r\n\r\n\r\n\r\n    import time\r\n    from sistats import *\r\n\r\n    cpu  = get_cpu_stats()\r\n    mem  = get_mem_stats()\r\n    net  = get_net_stats()``\r\n    disk = get_disk_stats()\r\n    fst  = get_fs_stats()\r\n\r\n    platinfo = get_platform_info()\r\n\r\n    pretty_print(\"Platform\", platinfo)\r\n    pretty_print(\"CPU\", cpu)\r\n    pretty_print(\"Memory\", mem)\r\n    pretty_print(\"Net\", net)\r\n    pretty_print(\"Disk\", disk)\r\n    pretty_print(\"File System\", fst)\r\n\r\n    while True:\r\n        time.sleep(5)\r\n\r\n        new_cpu  = get_cpu_stats()\r\n        new_mem  = get_mem_stats()\r\n        new_net  = get_net_stats()\r\n        new_disk = get_disk_stats()\r\n        new_fst  = get_fs_stats()\r\n\r\n        cpu_diff  = get_cpu_stats_delta(cpu, new_cpu)\r\n        mem_diff  = get_mem_stats_delta(mem, new_mem)\r\n        net_diff  = get_net_stats_delta(net, new_net)\r\n        disk_diff = get_disk_stats_delta(disk, new_disk)\r\n        fst_diff  = get_fs_stats_delta(fst, new_fst)\r\n\r\n        pretty_print(\"CPU diff\", cpu_diff)\r\n        pretty_print(\"Memory diff\", mem_diff)\r\n        pretty_print(\"Net diff\", net_diff)\r\n        pretty_print(\"Disk diff\", disk_diff)\r\n        pretty_print(\"File System diff\", fst_diff)\r\n\r\n        cpu  = new_cpu\r\n        mem  = new_mem\r\n        net  = new_net\r\n        disk = new_disk\r\n        fst  = new_fst\r\n\r\nwho?\r\n----\r\n\r\nmarianoguerra\r\n\r\nhow?\r\n----\r\n\r\nto use it you have to decide where are you sending it, you can send it to\r\nthe console using the dummy sample ConsoleChecker (in transport.py), to try it:\r\n\r\n    python transport.py\r\n\r\nyou can send it to [mosquitto](http://mosquitto.org/):    \r\n\r\n    # python mqtt_transport.py -c <client id here>\r\n    # check python mqtt_transport.py -h for options\r\n    python mqtt_transport.py -c ganesha\r\n\r\nyou can listen to those events using mqtt_listener:\r\n\r\n    # python mqtt_listener.py <client id here>\r\n    # for example\r\n    python mqtt_listener.py ganesha \r\n\r\nto use [mosquitto](http://mosquitto.org/) you should have it running on your system, it sends\r\nthe payload as [BSON](http://bsonspec.org/)\r\n\r\nyou can send it to a REST API:\r\n\r\n    # check python rest_transport.py -h for options\r\n    python rest_transport.py -c ganesha -u god -p secret -v\r\n\r\nyou can implement any other transport just subclassing transport.Checker\r\nand implementing the missing methods.\r\n\r\nhow to run on windows?\r\n----------------------\r\n\r\n* install python 2.7 from python.org\r\n* install psutil from http://www.lfd.uci.edu/~gohlke/pythonlibs/#psutil\r\n* download requests zip and run: python setup.py install \r\n* download sistats https://github.com/marianoguerra/sistats/zipball/master\r\n\r\nlicense?\r\n--------\r\n\r\nLGPL v3 + optional beer for the author\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"collect system stats and send them somewhere else(TM)","name":"Sistats"}